version: '3.4'

services:
  catalog-db:
    container_name: shoppingmongo
    restart: always
    ports:
        - "27017:27017"
    volumes:
        - mongo_data:/data/db
    image: mongo
  basket-db:
    container_name: shoppingredis
    restart: always
    image: redis:latest
    volumes:
        - redis-data:/data
        - redis-conf-data:/usr/local/etc/redis/redis.conf
  discount-db:
    container_name: discountdb
    image: postgres
    restart: always
    environment:
        - "POSTGRES_USER=admin"
        - "POSTGRES_PASSWORD=samplepass"
        - "POSTGRES_DB=DiscountDb"
    ports:
        - "5432:5432"
    volumes:
        - postgres_data:/var/lib/postgresql/data
  order-db:
    container_name: orderdb
    image: mcr.microsoft.com/mssql/server:2017-latest
    restart: always
    environment:
        - "SA_PASSWORD=Password@123"
        - "ACCEPT_EULA=Y"
    ports:
        - "1433:1433"
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
        - "PGADMIN_DEFAULT_EMAIL=josephmkureekattu101@hotmail.com"
        - "PGADMIN_DEFAULT_PASSWORD=admin@123"
    ports:
        - "5050:80"
  portainer:
    image: portainer/portainer-ce
    ports:
      - "9000:9000"
      - "5011:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data portainer/portainer-ce
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.platform.os == linux  
  catalog-api:
    container_name: catalogapi
    environment: 
        - ASPNETCORE_ENVIORNMENT=Development
        - "DatabaseSettings:ConnectionString=mongodb://catalog-db:27017"
    depends_on:
        - catalog-db
    build:
      context: .
      dockerfile: Services\Catalog\Catalog.API\Dockerfile
    ports:
      - "6001:80"
  basket-api:
    container_name: basketapi
    image: basket-api
    depends_on:
        - basket-db
        - discount-grpc-api
    environment:
        - "CacheSettings:ConnectionString=basket-db:6379"
        - "GrpcSettings:DiscountUrl=http://discount-grpc-api"
    build:
      context: .
      dockerfile: Services\Basket\Basket.API\Dockerfile
    ports:
      - "6002:80"
  discount-api:
    container_name: discountapi
    environment: 
        - ASPNETCORE_ENVIORNMENT=Development
        - "DatabaseSettings:ConnectionString=Server=discount-db;Port=5432;Database=DiscountDb;User Id=admin;Password=samplepass;"
        - WAIT_HOSTS=discountdb:5432
        - WAIT_HOSTS_TIMEOUT=300
        - WAIT_SLEEP_INTERVAL=30
        - WAIT_HOST_CONNECT_TIMEOUT=30
    depends_on:
        - discount-db
    build:
      context: .
      dockerfile: Services\Discount\Discount.API\Dockerfile
    ports:
      - "6003:80"
  discount-grpc-api:
    container_name: discountgrpcapi
    environment: 
        - ASPNETCORE_ENVIORNMENT=Development
        - "DatabaseSettings:ConnectionString=Server=discount-db;Port=5432;Database=DiscountDb;User Id=admin;Password=samplepass;"
        - WAIT_HOSTS=discountdb:5432
        - WAIT_HOSTS_TIMEOUT=300
        - WAIT_SLEEP_INTERVAL=30
        - WAIT_HOST_CONNECT_TIMEOUT=30
    depends_on:
        - discount-db
    build:
      context: .
      dockerfile: Services\Discount\Discount.Grpc\Dockerfile
    ports:
      - "6004:80"
volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  redis-data:
  redis-conf-data:
